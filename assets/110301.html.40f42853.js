import{_ as e,o as t,c as o,f as c,a as n,b as l,e as s,d as i,r as p}from"./app.9a681789.js";const r={},u=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"TIP"),n("p",null,[s("\u9879\u76EE\u4E2D\u6709\u8FD9\u4E48\u4E00\u4E2A\u9700\u6C42\uFF0C\u5C31\u662F\u6309\u9700\u542F\u52A8mock\u529F\u80FD\u3002\u8003\u8651\u5230mock\u53EA\u662F\u5728\u7279\u5B9A\u60C5\u51B5\u4E0B\uFF0C\u6240\u4EE5\u8003\u8651\u901A\u8FC7 "),n("code",null,"cross-env"),s(" \u6765\u5904\u7406\u3002")])],-1),d=i(`<h2 id="cross-env\u4FEE\u6539\u751F\u4EA7\u73AF\u5883\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#cross-env\u4FEE\u6539\u751F\u4EA7\u73AF\u5883\u53D8\u91CF" aria-hidden="true">#</a> cross-env\u4FEE\u6539\u751F\u4EA7\u73AF\u5883\u53D8\u91CF</h2><ol><li>\u6211\u60F3\u8981\u7684\u6700\u7EC8\u6548\u679C\u662Fnpm run dev:mock \u6765\u542F\u52A8mock\uFF0C\u6240\u4EE5\u5148\u5B89\u88C5 cross-env</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">--save</span> cross-env
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>\u627E\u5230 <code>/config/dev.evn.js</code> \uFF0C\u6DFB\u52A0MOCK\u53D8\u91CF</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">MOCK</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MOCK</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;false&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u5728package.json\u4E2D\u914D\u7F6E\u53D8\u91CF</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev:mock&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env MOCK=true webpack --config build/webpack.config.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u4F7F\u7528\u53D8\u91CF</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">MOCK</span> <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fetchMock<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://xxx/user/login&#39;</span><span class="token punctuation">,</span> loginAPI<span class="token punctuation">.</span>login<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>\u542F\u52A8MOCK</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> run dev:mock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),v=s("\u4E2A\u4EBA\u535A\u5BA2\uFF1A"),k={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"},m=n("strong",null,"\u5348\u540E\u5357\u6742",-1);function g(h,b){const a=p("ExternalLinkIcon");return t(),o("div",null,[u,c(" more "),d,n("p",null,[v,n("a",k,[m,l(a)])])])}const f=e(r,[["render",g],["__file","110301.html.vue"]]);export{f as default};
